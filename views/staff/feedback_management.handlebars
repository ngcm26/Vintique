{{!-- Feedback Management Content --}}
<div class="main-content">
  <div class="content-area">
    <!-- Page Header -->
    <div class="header-bar" style="margin-top: 65px; margin-left: -25px;">
      <h3 class="mb-0" style="margin-left: -25px;">Manage customer feedback and inquiries</h3>

      <div class="filter-section" style="width: 200px;">
        <label for="feedbackFilter" class="form-label visually-hidden">Filter Feedback:</label>
        <select id="feedbackFilter" class="form-select">
          <option value="all" selected>All Feedback</option>
          <option value="replied">Replied</option>
          <option value="not_replied">Not Replied</option>
        </select>
      </div>
    </div>

    <div class="dashboard">
      <div class="dashboard-box">
        <h2 id="totalFeedback">0</h2>
        <p>Total Messages</p>
      </div>
      <div class="dashboard-box">
        <h2 id="unrepliedFeedback">0</h2>
        <p>Unread</p>
      </div>
      <div class="dashboard-box">
        <h2 id="repliedFeedback">0</h2>
        <p>Replied</p>
      </div>
    </div>

    <!-- Feedback Messages -->
    {{#each feedbackList}}
    <div class="feedback-card">
      <div class="feedback-header">
        <div class="sender-info">
          <div class="sender-details">
            <h6>{{fullName}}</h6>
            <p>{{email}}</p>
          </div>
        </div>
        <div class="feedback-date">
          {{CreatedAt}}
        </div>
      </div>
      <div class="feedback-message">
        <strong>Subject: {{subject}}</strong><br>
        {{message}}
      </div>
      <div class="feedback-actions">
        {{#if replied}}
        <span class="replied-label">‚úîÔ∏è Replied</span>
        {{else}}
        <button class="btn-action btn-reply" data-email="{{email}}" data-subject="Re: {{subject}}" data-id="{{feedbackID}}"
          data-bs-target="#replyModal" data-bs-toggle="modal">üì© Reply</button>
        {{/if}}
        <button class="btn-action btn-update" data-id="{{feedbackID}}">üõ†Ô∏è Update</button>
        <button class="btn-action btn-delete" data-id="{{feedbackID}}">üóë Delete</button>
      </div>
    </div>
    {{/each}}
    <!-- If No Feedback -->
    {{#unless feedbackList.length}}
    <div class="empty-state">
      <i class="fas fa-inbox"></i>
      <p>No feedback messages yet.</p>
    </div>
    {{/unless}}

  </div>
</div>

<!-- Update feedback modal -->
<div class="modal fade" id="editFeedbackModal" tabindex="-1" aria-labelledby="editFeedbackModalLabel"
  aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="editFeedbackModalLabel">Edit Feedback</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>

      <div class="modal-body">
        <form id="editFeedbackForm">
          <input type="hidden" id="editFeedbackId">

          <div class="mb-3">
            <label for="editSubject" class="form-label">Subject</label>
            <input type="text" class="form-control" id="editSubject" required>
          </div>

          <div class="mb-3">
            <label for="editMessage" class="form-label">Message</label>
            <textarea class="form-control" id="editMessage" rows="4" required></textarea>
          </div>

          <div class="mb-3">
            <label for="editReplied" class="form-label">Status</label>
            <select class="form-select" id="editReplied">
              <option value="0">Not Replied</option>
              <option value="1">Replied</option>
            </select>
          </div>
        </form>
      </div>

      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" id="saveEditFeedback">Save Changes</button>
      </div>
    </div>
  </div>
</div>

<!-- Reply Modal -->
<div class="modal fade" id="replyModal" tabindex="-1" aria-labelledby="replyModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="replyModalLabel">Reply to Feedback</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>

      <div class="modal-body">
        <form id="replyForm">
          <input type="hidden" id="replyFeedbackId">
          <input type="hidden" id="replyEmail">

          <div class="mb-3">
            <label for="replySubject" class="form-label">Subject</label>
            <input type="text" class="form-control" id="replySubject" required>
          </div>

          <div class="mb-3">
            <label for="replyMessage" class="form-label">Reply Message</label>
            <textarea class="form-control" id="replyMessage" rows="6" required></textarea>
          </div>
        </form>
      </div>

      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" id="sendReply">Send Reply</button>
      </div>
    </div>
  </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteFeedbackModal" tabindex="-1" aria-labelledby="deleteFeedbackModalLabel"
  aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="deleteFeedbackModalLabel">Confirm Delete</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>

      <div class="modal-body">
        <p>Are you sure you want to delete this feedback? This action cannot be undone.</p>
        <input type="hidden" id="deleteFeedbackId">
      </div>

      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-danger" id="confirmDeleteFeedback">Delete</button>
      </div>
    </div>
  </div>
</div>

<script>
  // Feedback Management JavaScript
  document.addEventListener('DOMContentLoaded', function() {
    // Initialize feedback counts
    updateFeedbackCounts();

    // Filter functionality
    document.getElementById('feedbackFilter').addEventListener('change', function() {
      const filter = this.value;
      const feedbackCards = document.querySelectorAll('.feedback-card');
      
      feedbackCards.forEach(card => {
        const replied = card.querySelector('.replied-label') !== null;
        
        if (filter === 'all') {
          card.style.display = 'block';
        } else if (filter === 'replied' && replied) {
          card.style.display = 'block';
        } else if (filter === 'not_replied' && !replied) {
          card.style.display = 'block';
        } else {
          card.style.display = 'none';
        }
      });
    });

    // Update feedback counts
    function updateFeedbackCounts() {
      const totalFeedback = document.querySelectorAll('.feedback-card').length;
      const repliedFeedback = document.querySelectorAll('.replied-label').length;
      const unrepliedFeedback = totalFeedback - repliedFeedback;

      document.getElementById('totalFeedback').textContent = totalFeedback;
      document.getElementById('repliedFeedback').textContent = repliedFeedback;
      document.getElementById('unrepliedFeedback').textContent = unrepliedFeedback;
    }

    // Edit feedback functionality
    document.querySelectorAll('.btn-update').forEach(button => {
      button.addEventListener('click', function() {
        const feedbackId = this.getAttribute('data-id');
        const feedbackCard = this.closest('.feedback-card');
        const subject = feedbackCard.querySelector('.feedback-message strong').textContent.replace('Subject: ', '');
        const message = feedbackCard.querySelector('.feedback-message').textContent.replace(/^Subject: .*\n/, '');
        const replied = feedbackCard.querySelector('.replied-label') !== null;

        document.getElementById('editFeedbackId').value = feedbackId;
        document.getElementById('editSubject').value = subject;
        document.getElementById('editMessage').value = message;
        document.getElementById('editReplied').value = replied ? '1' : '0';

        new bootstrap.Modal(document.getElementById('editFeedbackModal')).show();
      });
    });

    // Save edit feedback
    document.getElementById('saveEditFeedback').addEventListener('click', function() {
      const feedbackId = document.getElementById('editFeedbackId').value;
      const subject = document.getElementById('editSubject').value;
      const message = document.getElementById('editMessage').value;
      const replied = document.getElementById('editReplied').value;

      fetch(`/staff/feedback_management/${feedbackId}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          subject: subject,
          message: message,
          replied: replied
        })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          location.reload();
        } else {
          alert('Error updating feedback: ' + data.error);
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Error updating feedback');
      });
    });

    // Reply functionality
    document.querySelectorAll('.btn-reply').forEach(button => {
      button.addEventListener('click', function() {
        const feedbackId = this.getAttribute('data-id');
        const email = this.getAttribute('data-email');
        const subject = this.getAttribute('data-subject');

        document.getElementById('replyFeedbackId').value = feedbackId;
        document.getElementById('replyEmail').value = email;
        document.getElementById('replySubject').value = subject;

        new bootstrap.Modal(document.getElementById('replyModal')).show();
      });
    });

    // Send reply
    document.getElementById('sendReply').addEventListener('click', function() {
      const feedbackId = document.getElementById('replyFeedbackId').value;
      const email = document.getElementById('replyEmail').value;
      const subject = document.getElementById('replySubject').value;
      const message = document.getElementById('replyMessage').value;

      fetch('/staff/feedback_management/reply', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          feedbackId: feedbackId,
          email: email,
          subject: subject,
          message: message
        })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          location.reload();
        } else {
          alert('Error sending reply: ' + data.error);
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Error sending reply');
      });
    });

    // Delete feedback functionality
    document.querySelectorAll('.btn-delete').forEach(button => {
      button.addEventListener('click', function() {
        const feedbackId = this.getAttribute('data-id');
        document.getElementById('deleteFeedbackId').value = feedbackId;
        new bootstrap.Modal(document.getElementById('deleteFeedbackModal')).show();
      });
    });

    // Confirm delete
    document.getElementById('confirmDeleteFeedback').addEventListener('click', function() {
      const feedbackId = document.getElementById('deleteFeedbackId').value;

      fetch(`/staff/feedback_management/${feedbackId}`, {
        method: 'DELETE'
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          location.reload();
        } else {
          alert('Error deleting feedback: ' + data.error);
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Error deleting feedback');
      });
    });
  });
</script>