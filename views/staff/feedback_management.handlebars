<!DOCTYPE html>
<html lang="en">
<head>
    <title>Feedback Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="/assets/css/staff/feedback_management.css">
</head>
<body>
    <div class="main-content">
        <div class="content-area">
            <!-- Page Header -->
            <div class="page-header">
                <div class="page-title">Feedback & Inquiries</div>
                <div class="page-subtitle">Manage customer feedback and inquiries</div>
            </div>

            <!-- Stats Section -->
            

            <!-- Feedback Messages -->
            {{#each feedbackList}}
            <div class="feedback-card">
                <div class="feedback-header">
                    <div class="sender-info">
                        <div class="sender-details">
                            <h6>{{name}}</h6>
                            <p>{{email}}</p>
                        </div>
                    </div>
                    <div class="feedback-date">
                        {{CreatedAt}}
                    </div>
                </div>
                <div class="feedback-message">
                    <strong>Subject: {{subject}}</strong><br>
                    {{message}}
                </div>
                <div class="feedback-actions">
                    <button class="btn-action btn-reply" data-email="{{email}}" data-subject="Re: {{subject}}">📩 Reply</button>
                    <button class="btn-action btn-update" data-id="{{id}}">🛠️ Update</button>
                    <button class="btn-action btn-delete" data-id="{{id}}">🗑 Delete</button>
                </div>
            </div>
            {{/each}}
            <!-- If No Feedback -->
            {{#unless feedbackList.length}}
            <div class="empty-state">
                <i class="fas fa-inbox"></i>
                <p>No feedback messages yet.</p>
            </div>
            {{/unless}}
            
        </div>
    </div>
    <div class="modal fade" id="editFeedbackModal" tabindex="-1" aria-labelledby="editFeedbackModalLabel"
                aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="editFeedbackModalLabel">Edit Feedback</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
            
                        <div class="modal-body">
                            <form id="editFeedbackForm">
                                <input type="hidden" id="editFeedbackId">
            
                                <div class="mb-3">
                                    <label for="editSubject" class="form-label">Subject</label>
                                    <input type="text" class="form-control" id="editSubject" required>
                                </div>
            
                                <div class="mb-3">
                                    <label for="editMessage" class="form-label">Message</label>
                                    <textarea class="form-control" id="editMessage" rows="3" required></textarea>
                                </div>
            
                                <div class="mb-3">
                                    <label for="editReply" class="form-label">Reply</label>
                                    <textarea class="form-control" id="editReply" rows="2"></textarea>
                                </div>
                            </form>
                        </div>
            
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" form="editFeedbackForm" class="btn btn-primary">Save Changes</button>
                        </div>
                    </div>
                </div>
            </div>
</body>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
    document.querySelectorAll('.btn-delete').forEach(button => {
  button.addEventListener('click', () => {
    const id = button.getAttribute('data-id');
    if (confirm('Are you sure you want to delete this feedback?')) {
      fetch(`/feedback/${id}`, {
        method: 'DELETE'
      })
      .then(res => {
        if (res.ok) {
          // Optionally remove the deleted row from the UI or reload the page
          location.reload();
        } else {
          alert('Failed to delete feedback.');
        }
      });
    }
  });
});

function setupUpdateButtons() {
        document.querySelectorAll('.btn-update').forEach(button => {
            button.addEventListener('click', () => {
                const feedbackId = button.getAttribute('data-id');
                fetch(`/staff/feedback_management/${feedbackId}`, {
                    method: 'GET',
                    cache: 'no-store'
                })
                    .then(response => {
                        console.log('Response status:', response.status);
                        return response.json();
                    })
                    .then(data => {
                        console.log('Data received:', data);

                        // Check if data has expected fields
                        if (!data || !data.feedbackID) {
                            throw new Error('Invalid feedback data');
                        }
                            document.getElementById('editFeedbackId').value = data.feedbackID;
                            document.getElementById('editSubject').value = data.subject || '';
                            document.getElementById('editMessage').value = data.message || '';
                            document.getElementById('editReply').value = data.replied || '';
                        // Show the modal using Bootstrap
                        const editModal = new bootstrap.Modal(document.getElementById('editFeedbackModal'));
                        editModal.show();
                    })
                    .catch(error => {
                        console.error('Error fetching feedback:', error);
                        alert('Failed to load feedback.');
                    });
            });
        });
    }

document.getElementById('editFeedbackForm').addEventListener('submit', async function(e) {
  e.preventDefault(); // Prevent form default submit

  const feedbackId = document.getElementById('editFeedbackId').value;
  const subject = document.getElementById('editSubject').value.trim();
  const message = document.getElementById('editMessage').value.trim();
  const replied = document.getElementById('editReply').value.trim();

  // Basic validation
  if (!subject || !message) {
    alert('Subject and message are required.');
    return;
  }

  try {
    const response = await fetch(`/feedback/${feedbackId}`, {
      method: 'PATCH',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ subject, message, replied })
    });

    if (response.ok) {
      alert('Feedback updated successfully!');
      // Optionally close modal
      const editModal = bootstrap.Modal.getInstance(document.getElementById('editFeedbackModal'));
      editModal.hide();

      // Reload or update UI to reflect changes
      location.reload(); // simple reload, or update the displayed feedback dynamically
    } else {
      const errorData = await response.json();
      alert('Update failed: ' + (errorData.error || 'Unknown error'));
    }
  } catch (error) {
    console.error('Error updating feedback:', error);
    alert('Server error while updating feedback.');
  }
});


function setupReplyButtons() {
  document.querySelectorAll('.btn-reply').forEach(button => {
    button.addEventListener('click', () => {
      const email = button.getAttribute('data-email');
      const subject = button.getAttribute('data-subject');

      const defaultMessage = "Hello,\n\nThank you for your feedback. We will get back to you shortly.\n\nBest regards,";

      const mailtoLink = `mailto:${encodeURIComponent(email)}?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(defaultMessage)}`;
      window.open(mailtoLink, '_blank');
    });
  });
}

// Initialize reply buttons when DOM is loaded
window.addEventListener('DOMContentLoaded', () => {
  setupUpdateButtons();
  setupReplyButtons(); // <-- Make sure this is included
});




</script>
</html>