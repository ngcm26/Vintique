<!-- Product Detail Page -->
<link rel="stylesheet" href="/assets/css/users/product_detail.css">

{{#if error}}
<div class="container mt-5">
  <div class="alert alert-danger" role="alert">
    <h4 class="alert-heading">Error</h4>
    <p>{{error}}</p>
    <hr>
    <p class="mb-0">
      <a href="/marketplace" class="btn btn-primary">Back to Marketplace</a>
    </p>
  </div>
</div>
{{else}}
<div class="container">
  <!-- Breadcrumb -->
  <div class="breadcrumb-section">
    <nav aria-label="breadcrumb">
      <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/home">Home</a></li>
        <li class="breadcrumb-item"><a href="/marketplace">Shop</a></li>
        <li class="breadcrumb-item">{{listing.category}}</li>
        <li class="breadcrumb-item active" aria-current="page">{{listing.title}}</li>
      </ol>
    </nav>
    <a href="/marketplace" class="back-button">
      <i class="fas fa-arrow-left"></i>
      Back to Shop
    </a>
  </div>

  <div class="product-detail-container">
    <div class="row">
        <!-- Product Images Section -->
        <div class="col-lg-6">
          <div class="product-image-section">
            <div class="image-carousel">
              <div class="carousel-container">
                <div class="carousel-slide active">
                  <img id="mainImage" src="{{listing.image_url}}" alt="{{listing.title}}" class="main-product-image">
                </div>
                {{#each listing.additional_images}}
                  <div class="carousel-slide">
                    <img src="{{this}}" alt="{{../listing.title}}" class="main-product-image">
                  </div>
                {{/each}}
              </div>
              
              <!-- Carousel Navigation -->
              {{#if listing.additional_images}}
                <button class="carousel-btn prev-btn" onclick="changeSlide(-1)">
                  <i class="fas fa-chevron-left"></i>
                </button>
                <button class="carousel-btn next-btn" onclick="changeSlide(1)">
                  <i class="fas fa-chevron-right"></i>
                </button>
              {{/if}}
              
              <!-- Carousel Indicators -->
              {{#if listing.additional_images}}
                <div class="carousel-indicators">
                  <span class="indicator active" onclick="goToSlide(0)"></span>
                  {{#each listing.additional_images}}
                    <span class="indicator" onclick="goToSlide({{add @index 1}})"></span>
                  {{/each}}
                </div>
              {{/if}}
            </div>
          </div>
        </div>

        <!-- Product Information Section -->
        <div class="col-lg-6">
          <div class="product-info-section">
            <div class="product-category">{{listing.category}}</div>
            <h1 class="product-title">{{listing.title}}</h1>
            
            <div class="product-seller">
              Sold by <a href="#" onclick="contactSeller('{{listing.username}}', '{{listing.title}}')">@{{listing.username}}</a>
            </div>
            
            <div class="product-price">${{listing.price}}</div>
            <div class="product-condition">{{listing.item_condition}}</div>
            {{#if (eq listing.status 'sold')}}
              <div class="product-status sold">
                <i class="fas fa-check-circle"></i> SOLD
              </div>
            {{/if}}

            <div class="product-actions">
              {{#if user}}
                {{#if (eq user.user_id listing.user_id)}}
                  <!-- Owner actions -->
                  <button class="btn-purchase" onclick="window.location.href='/edit_listing/{{listing.listing_id}}'">
                    <i class="fas fa-edit"></i> Edit Listing
                  </button>
                  <button class="btn-cart" onclick="markAsSold({{listing.listing_id}})">
                    <i class="fas fa-check"></i> Mark as Sold
                  </button>
                  <button class="btn-message" onclick="deleteListing({{listing.listing_id}})">
                    <i class="fas fa-trash"></i> Delete
                  </button>
                {{else}}
                  <!-- Buyer actions -->
                  <button class="btn-purchase" onclick="buyNow()">
                    <i class="fas fa-credit-card"></i> Buy Now
                  </button>
                  <button class="btn-cart" onclick="addToCart()">
                    <i class="fas fa-shopping-cart"></i> Add to Cart
                  </button>
                  <button class="btn-message" onclick="contactSeller('{{listing.username}}', '{{listing.title}}')">
                    <i class="fas fa-comment"></i> Message Seller
                  </button>
                {{/if}}
              {{else}}
                <button class="btn-purchase" onclick="window.location.href='/login'">
                  <i class="fas fa-sign-in-alt"></i> Login to Purchase
                </button>
                <button class="btn-message" onclick="window.location.href='/login'">
                  <i class="fas fa-sign-in-alt"></i> Login to Message
                </button>
              {{/if}}
            </div>

            <!-- Quick Info -->
            <div class="delivery-info">
              <div class="info-card">
                <i class="fas fa-shipping-fast"></i>
                <h5>Fast Delivery</h5>
                <p>2-3 business days</p>
              </div>
              <div class="info-card">
                <i class="fas fa-undo"></i>
                <h5>Easy Returns</h5>
                <p>30-day return policy</p>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Product Tabs -->
      <div class="product-tabs">
        <div class="tab-nav">
          <button class="tab-btn active" onclick="showTab('description', event)">Description</button>
          <button class="tab-btn" onclick="showTab('delivery', event)">Delivery & Returns</button>
          <button class="tab-btn" onclick="showTab('sustainability', event)">Sustainability Impact</button>
          <button class="tab-btn" onclick="showTab('reviews', event)">Reviews</button>
        </div>

        <!-- Description Tab -->
        <div class="tab-content active" id="description">
          <div class="description-content">
            <h4>Product Description</h4>
            <p>{{listing.description}}</p>
            
            <h4>Key Features</h4>
            <ul>
              <li>Brand: {{listing.brand}}</li>
              <li>Size: {{listing.size}}</li>
              <li>Category: {{listing.category}}</li>
              <li>Condition: {{listing.item_condition}}</li>
              <li>Listed on: {{formatDate listing.created_at}}</li>
            </ul>

            <h4>Size & Measurements</h4>
            <div>
              <p><strong>Size:</strong> {{listing.size}}</p>
              <p><strong>Brand:</strong> {{listing.brand}}</p>
              <p><strong>Category:</strong> {{listing.category}}</p>
              <p><strong>Condition:</strong> {{listing.item_condition}}</p>
            </div>
          </div>
        </div>

        <!-- Delivery Tab -->
        <div class="tab-content" id="delivery">
          <div class="delivery-info">
            <div class="info-card">
              <i class="fas fa-truck"></i>
              <h5>Standard Delivery</h5>
              <p>2-3 business days<br>Free shipping over $50</p>
            </div>
            <div class="info-card">
              <i class="fas fa-bolt"></i>
              <h5>Express Delivery</h5>
              <p>Next business day<br>$9.99 additional fee</p>
            </div>
            <div class="info-card">
              <i class="fas fa-shield-alt"></i>
              <h5>Secure Packaging</h5>
              <p>Eco-friendly packaging<br>Tracking included</p>
            </div>
          </div>

          <h4>Return Policy</h4>
          <ul>
            <li>30-day return window from delivery date</li>
            <li>Items must be in original condition</li>
            <li>Free returns for defective items</li>
            <li>Return shipping fee: $5.99 (deducted from refund)</li>
            <li>Refunds processed within 5-7 business days</li>
          </ul>

          <h4>Exchange Policy</h4>
          <ul>
            <li>Size exchanges available within 14 days</li>
            <li>One free exchange per order</li>
            <li>Subject to availability</li>
          </ul>
        </div>

        <!-- Sustainability Tab -->
        <div class="tab-content" id="sustainability">
          <h4>Environmental Impact Score: <span style="color: #27ae60; font-weight: 700;">85%</span></h4>
          
          <div class="sustainability-metrics">
            <div class="metric-card">
              <div class="metric-value">2.3kg</div>
              <div class="metric-label">CO2 Saved</div>
            </div>
            <div class="metric-card">
              <div class="metric-value">450L</div>
              <div class="metric-label">Water Saved</div>
            </div>
            <div class="metric-card">
              <div class="metric-value">78%</div>
              <div class="metric-label">Less Waste</div>
            </div>
            <div class="metric-card">
              <div class="metric-value">92%</div>
              <div class="metric-label">Eco Materials</div>
            </div>
          </div>

          <h4>Sustainability Features</h4>
          <ul>
            <li><strong>Circular Fashion:</strong> Extends product lifecycle by 5+ years</li>
            <li><strong>Water Conservation:</strong> Saves 450 liters compared to new production</li>
            <li><strong>Carbon Footprint:</strong> 78% lower CO2 emissions through reuse</li>
            <li><strong>Local Impact:</strong> Supports local circular economy</li>
            <li><strong>Eco Packaging:</strong> Shipped in biodegradable materials</li>
          </ul>

          <h4>Certifications</h4>
          <div class="d-flex gap-3 mt-3">
            <span class="badge bg-success">Circular Fashion</span>
            <span class="badge bg-success">Carbon Neutral</span>
            <span class="badge bg-success">Eco Friendly</span>
          </div>
        </div>

        <!-- Reviews Tab -->
        <div class="tab-content" id="reviews">
          <div class="reviews-section">
            <div class="review-summary">
              <div class="overall-rating">
                <div class="rating-number">4.8</div>
                <div class="rating-stars">
                  <i class="fas fa-star"></i>
                  <i class="fas fa-star"></i>
                  <i class="fas fa-star"></i>
                  <i class="fas fa-star"></i>
                  <i class="fas fa-star"></i>
                </div>
                <div class="rating-count">Based on 24 reviews</div>
              </div>
              
              <div class="rating-breakdown">
                <div class="rating-row">
                  <span>5 stars</span>
                  <div class="rating-bar">
                    <div class="rating-fill" style="width: 75%"></div>
                  </div>
                  <span>18</span>
                </div>
                <div class="rating-row">
                  <span>4 stars</span>
                  <div class="rating-bar">
                    <div class="rating-fill" style="width: 20%"></div>
                  </div>
                  <span>5</span>
                </div>
                <div class="rating-row">
                  <span>3 stars</span>
                  <div class="rating-bar">
                    <div class="rating-fill" style="width: 4%"></div>
                  </div>
                  <span>1</span>
                </div>
                <div class="rating-row">
                  <span>2 stars</span>
                  <div class="rating-bar">
                    <div class="rating-fill" style="width: 0%"></div>
                  </div>
                  <span>0</span>
                </div>
                <div class="rating-row">
                  <span>1 star</span>
                  <div class="rating-bar">
                    <div class="rating-fill" style="width: 0%"></div>
                  </div>
                  <span>0</span>
                </div>
              </div>
            </div>

            <!-- Individual Reviews -->
            <div class="individual-review">
              <div class="review-header">
                <div class="reviewer-info">
                  <div class="reviewer-avatar">SJ</div>
                  <div class="reviewer-details">
                    <h6>Sarah Johnson</h6>
                    <p>Verified Buyer • 2 days ago</p>
                  </div>
                </div>
                <div class="review-rating">
                  <i class="fas fa-star"></i>
                  <i class="fas fa-star"></i>
                  <i class="fas fa-star"></i>
                  <i class="fas fa-star"></i>
                  <i class="fas fa-star"></i>
                </div>
              </div>
              <div class="review-text">
                This item exceeded my expectations! The condition was even better than described. 
                Love supporting sustainable fashion. Will definitely buy from @{{listing.username}} again!
              </div>
            </div>

            <div class="individual-review">
              <div class="review-header">
                <div class="reviewer-info">
                  <div class="reviewer-avatar">MR</div>
                  <div class="reviewer-details">
                    <h6>Maria Rodriguez</h6>
                    <p>Verified Buyer • 1 week ago</p>
                  </div>
                </div>
                <div class="review-rating">
                  <i class="fas fa-star"></i>
                  <i class="fas fa-star"></i>
                  <i class="fas fa-star"></i>
                  <i class="fas fa-star"></i>
                  <i class="fas fa-star"></i>
                </div>
              </div>
              <div class="review-text">
                Beautiful item! Fits perfectly and the quality is so good. 
                Fast shipping and great communication from the seller.
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
{{/if}}

<script>
// Make user data available globally
window.currentUser = {{{userJson}}} || null;

// Updated contactSeller function that integrates with your messages system
function contactSeller(sellerUsername, productTitle) {
  console.log('Contact seller called:', { sellerUsername, productTitle, currentUser: window.currentUser });
  
  // Check if user is logged in
  if (!window.currentUser) {
    showNotification('Please log in to contact sellers', 'error');
    setTimeout(() => {
      window.location.href = '/login';
    }, 1500);
    return;
  }

  // Get the listing ID from the URL
  const listingId = window.location.pathname.split('/').pop();
  console.log('Extracted listing ID:', listingId);
  
  // Create a more user-friendly message prompt
  const defaultMessage = `Hi! I'm interested in your "${productTitle}". Is it still available?`;
  const message = prompt(`Send a message to @${sellerUsername}:`, defaultMessage);
  
  if (message === null) {
    console.log('User cancelled message prompt');
    return; // User cancelled
  }
  
  if (message.trim() === '') {
    showNotification('Please enter a message', 'error');
    return;
  }

  // Show loading state on the message button
  const messageBtn = document.querySelector('.btn-message');
  const originalBtnText = messageBtn ? messageBtn.innerHTML : '';
  
  if (messageBtn) {
    messageBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Sending...';
    messageBtn.disabled = true;
    messageBtn.style.opacity = '0.7';
  }

  console.log('Sending request to start conversation:', {
    listing_id: parseInt(listingId),
    message: message.trim()
  });

  // Send request to start conversation
  fetch('/start-conversation', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      listing_id: parseInt(listingId), // Make sure it's a number
      message: message.trim()
    })
  })
  .then(response => {
    console.log('Response status:', response.status);
    console.log('Response headers:', response.headers);
    
    if (!response.ok) {
      return response.text().then(text => {
        console.error('Error response text:', text);
        throw new Error(`HTTP error! status: ${response.status} - ${text}`);
      });
    }
    return response.json();
  })
  .then(data => {
    console.log('Response data:', data);
    if (data.success) {
      // Show appropriate success message
      const successMessage = data.existing 
        ? `Message sent! Continuing your conversation with @${sellerUsername}` 
        : `New conversation started with @${sellerUsername}!`;
      
      showNotification(successMessage, 'success');
      
      // Change button to indicate success
      if (messageBtn) {
        messageBtn.innerHTML = '<i class="fas fa-check"></i> Message Sent!';
        messageBtn.style.background = 'linear-gradient(135deg, #28a745, #20c997)';
        messageBtn.style.color = 'white';
      }
      
      // Redirect to messages page with the conversation after a short delay
      setTimeout(() => {
        window.location.href = `/messages?conversation=${data.conversation_id}`;
      }, 1500);
    } else {
      throw new Error(data.error || 'Failed to send message');
    }
  })
  .catch(error => {
    console.error('Error contacting seller:', error);
    showNotification('Error: ' + error.message, 'error');
    
    // Reset button state
    if (messageBtn) {
      messageBtn.innerHTML = originalBtnText;
      messageBtn.disabled = false;
      messageBtn.style.opacity = '1';
      messageBtn.style.background = '';
      messageBtn.style.color = '';
    }
  });
}

// Enhanced notification function for better UX
function showNotification(message, type = 'success') {
  // Remove any existing notifications
  const existingNotifications = document.querySelectorAll('.custom-notification');
  existingNotifications.forEach(notif => notif.remove());
  
  // Create notification element
  const notification = document.createElement('div');
  notification.className = 'custom-notification';
  
  // Set colors based on type
  let bgColor, textColor, icon;
  switch(type) {
    case 'success':
      bgColor = 'linear-gradient(135deg, #28a745, #20c997)';
      textColor = 'white';
      icon = 'fas fa-check-circle';
      break;
    case 'error':
      bgColor = 'linear-gradient(135deg, #dc3545, #c82333)';
      textColor = 'white';
      icon = 'fas fa-exclamation-triangle';
      break;
    case 'info':
      bgColor = 'linear-gradient(135deg, #17a2b8, #138496)';
      textColor = 'white';
      icon = 'fas fa-info-circle';
      break;
    default:
      bgColor = 'linear-gradient(135deg, #6c757d, #545b62)';
      textColor = 'white';
      icon = 'fas fa-bell';
  }
  
  notification.style.cssText = `
    position: fixed;
    top: 20px;
    right: 20px;
    z-index: 10000;
    min-width: 320px;
    max-width: 450px;
    background: ${bgColor};
    color: ${textColor};
    padding: 1rem 1.5rem;
    border-radius: 12px;
    box-shadow: 0 8px 32px rgba(0,0,0,0.2);
    font-weight: 500;
    font-size: 0.95rem;
    display: flex;
    align-items: center;
    gap: 0.75rem;
    opacity: 0;
    transform: translateX(100%);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255,255,255,0.1);
  `;
  
  notification.innerHTML = `
    <i class="${icon}" style="font-size: 1.1rem;"></i>
    <span style="flex: 1;">${message}</span>
    <button onclick="this.parentElement.remove()" style="
      background: rgba(255,255,255,0.2);
      border: none;
      color: ${textColor};
      width: 24px;
      height: 24px;
      border-radius: 50%;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 0.9rem;
      transition: background 0.2s;
    " onmouseover="this.style.background='rgba(255,255,255,0.3)'" onmouseout="this.style.background='rgba(255,255,255,0.2)'">&times;</button>
  `;
  
  document.body.appendChild(notification);
  
  // Animate in
  setTimeout(() => {
    notification.style.opacity = '1';
    notification.style.transform = 'translateX(0)';
  }, 100);
  
  // Auto remove after delay
  const autoRemoveDelay = type === 'error' ? 6000 : 4000;
  setTimeout(() => {
    if (notification.parentElement) {
      notification.style.opacity = '0';
      notification.style.transform = 'translateX(100%)';
      setTimeout(() => {
        if (notification.parentElement) {
          notification.remove();
        }
      }, 300);
    }
  }, autoRemoveDelay);
}

// Function to handle when user clicks message seller from marketplace
function startConversationFromMarketplace(listingId, sellerEmail, productTitle) {
  if (!window.currentUser) {
    showNotification('Please log in to contact sellers', 'error');
    setTimeout(() => {
      window.location.href = '/login';
    }, 1500);
    return;
  }

  const defaultMessage = `Hi! I'm interested in your "${productTitle}". Is it still available?`;
  const message = prompt(`Send a message about "${productTitle}":`, defaultMessage);
  
  if (message === null || message.trim() === '') {
    return;
  }

  fetch('/start-conversation', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      listing_id: listingId,
      message: message.trim()
    })
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      showNotification('Message sent successfully!', 'success');
      setTimeout(() => {
        window.location.href = `/messages?conversation=${data.conversation_id}`;
      }, 1500);
    } else {
      showNotification('Error: ' + data.error, 'error');
    }
  })
  .catch(error => {
    console.error('Error starting conversation:', error);
    showNotification('Network error while contacting seller', 'error');
  });
}

// Add other product detail functions
function buyNow() {
  if (!window.currentUser) {
    showNotification('Please log in to purchase items', 'error');
    setTimeout(() => {
      window.location.href = '/login';
    }, 1500);
    return;
  }
  
  const listingId = window.location.pathname.split('/').pop();
  
  // For now, redirect to a checkout page or show a message
  showNotification('Buy Now functionality will be implemented soon!', 'info');
}

function addToCart() {
  if (!window.currentUser) {
    showNotification('Please log in to add items to cart', 'error');
    setTimeout(() => {
      window.location.href = '/login';
    }, 1500);
    return;
  }
  
  const listingId = window.location.pathname.split('/').pop();
  
  fetch('/api/cart', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      listing_id: parseInt(listingId),
      quantity: 1
    })
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      showNotification(data.message, 'success');
    } else {
      showNotification('Error: ' + data.error, 'error');
    }
  })
  .catch(error => {
    console.error('Error adding to cart:', error);
    showNotification('Error adding item to cart', 'error');
  });
}

function markAsSold(listingId) {
  if (confirm('Are you sure you want to mark this item as sold?')) {
    fetch(`/listings/${listingId}/mark_sold`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        showNotification('Item marked as sold!', 'success');
        setTimeout(() => {
          window.location.reload();
        }, 1500);
      } else {
        showNotification('Error: ' + data.error, 'error');
      }
    })
    .catch(error => {
      console.error('Error marking as sold:', error);
      showNotification('Error marking item as sold', 'error');
    });
  }
}

function deleteListing(listingId) {
  if (confirm('Are you sure you want to delete this listing? This action cannot be undone.')) {
    fetch(`/listings/${listingId}`, {
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/json'
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        showNotification('Listing deleted successfully!', 'success');
        setTimeout(() => {
          window.location.href = '/my_listing';
        }, 1500);
      } else {
        showNotification('Error: ' + data.error, 'error');
      }
    })
    .catch(error => {
      console.error('Error deleting listing:', error);
      showNotification('Error deleting listing', 'error');
    });
  }
}

// Tab functionality
function showTab(tabName, event) {
  // Remove active class from all tab buttons
  document.querySelectorAll('.tab-btn').forEach(btn => btn.classList.remove('active'));
  
  // Remove active class from all tab contents
  document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));
  
  // Add active class to clicked button
  event.target.classList.add('active');
  
  // Show the selected tab content
  document.getElementById(tabName).classList.add('active');
}

// Image carousel functionality
let currentSlide = 0;
const slides = document.querySelectorAll('.carousel-slide');
const indicators = document.querySelectorAll('.indicator');

function changeSlide(direction) {
  slides[currentSlide].classList.remove('active');
  indicators[currentSlide].classList.remove('active');
  
  currentSlide += direction;
  
  if (currentSlide >= slides.length) {
    currentSlide = 0;
  } else if (currentSlide < 0) {
    currentSlide = slides.length - 1;
  }
  
  slides[currentSlide].classList.add('active');
  indicators[currentSlide].classList.add('active');
}

function goToSlide(slideIndex) {
  slides[currentSlide].classList.remove('active');
  indicators[currentSlide].classList.remove('active');
  
  currentSlide = slideIndex;
  
  slides[currentSlide].classList.add('active');
  indicators[currentSlide].classList.add('active');
}

console.log('Product detail messaging functionality loaded');
console.log('Current user:', window.currentUser);
</script>